Virtual DOM 이란

react의 과거의 메뉴얼 : 우리는 지속해서 데이터가 변화하는 대규모 애플리케이션을 구축하기 위해 리액트를 만들었다.
(we built React to solve one problem: builing large applications with data that changes over time)

데이터 단을 담당하는 Model
화면을 담당하는 View
사용자가 발생시키기되는 이벤트를 관리하는 Controler
로 이루어진 MVC패턴
(MVVM, MVW)

위의 패턴의 공통점 Model(data관리)

양방향 바인딩 : 모델에 있는 값이 변하면 뷰에서도 값을 변화시켜주고 뷰에서 어떤 값을 변화시키려고 하면 모델에서도 변화됨

변화(Mutation)
변화라는 것은 상당히 복잡한 작업
로직을 정해주는 작업(프레임워크나 라이브러리에서 정해줌)

facebook의 발상 - 그냥 Mutation을 하지 말고, 데이터가 바뀌면 뷰를 날려버리고 새로 만들어버리면 어떨가

브라우저는 돔 기반으로 작동하기 때문에 페이지가 그때그때 새로운 뷰를 만들어버릴려고 하면은 성능적으로 엄청난 문제가 있을 것이다.

-> 그래서 존재하는 것이 Virtual DOM 이다

Virtual DOM 

가상의 돔 
실제로 브라우저의 돔에 새로운것을 넣는 것이 아니라 자바스크립트로 이루어진 가상의 돔에 한번 렌더링을 하고 
기존의 돔과 비교를 하여 정말 변화가 필요한 곳에만 업데이트를 해주는 것

데이터가 바뀌었을떄 어떻게 업데이트를 할지 고민하는 것이 아니라 바뀐데이터로 그려놓고 바뀐부분만 찾아내서 바꿔주는 것
